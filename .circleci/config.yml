version: 2.1

commands:
  install-deps:
    steps:
      - run:
          name: Install apt-get dependencies
          command: |
            apt-get update
            apt-get install git ssh curl bzip2 libffi6 libffi-dev -y
  install-conda:
    parameters:
      python:
        type: string
        default: "3.6"
    steps:
      - run:
          name: Install Miniconda
          command: |
            if [ $(uname) == "Darwin" ]; then
              curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o /tmp/miniconda.sh
            else
              curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh
            fi
            bash /tmp/miniconda.sh -b -f -p $HOME/miniconda
            $HOME/miniconda/bin/conda create --name myenv python=<<parameters.python>>
  install-r:
    parameters:
      r:
        type: string
        default: "latest"
    steps:
      - run:
          name: Install R
          command: |
            if [ "<<parameters.r>>" == "devel" ]; then
              R_DEVEL_FILE=$(curl -sL http://mac.r-project.org/ | sed -nE 's|.*href="?(.*/R-[^/]*\.pkg)"?>.*|\1|p' | tail -n1)
              URL="http://mac.r-project.org/$R_DEVEL_FILE"
            else
              URL="https://cran.r-project.org/bin/macosx/el-capitan/base/R-<<parameters.r>>.pkg"
            fi
            echo downloading "$URL"
            curl -L "$URL" -o R.pkg
            sudo installer -pkg R.pkg -target /
  install-r-packages:
    parameters:
      packages:
        type: string
    steps:
      - run:
          name: Install R packages
          command: R --slave -e "install.packages('<<parameters.packages>>', repo = 'https://cloud.r-project.org')"
  test:
    steps:
      - run:
          name: Install and test
          command: |
            source $HOME/miniconda/bin/activate myenv
            python -m pip install -e .[test]
            export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
            pytest -s --cov=rchitect
            python -m pip install codecov
            codecov

executors:
  rocker:
    parameters:
      tag:
        type: string
        default: latest
    docker:
      - image: rocker/tidyverse:<< parameters.tag >>

jobs:
  linux-test:
    parameters:
      r:
        type: string
      python:
        type: string
    executor:
      name: rocker
      tag: <<parameters.r>>
    steps:
      - install-deps
      - checkout
      - install-conda:
          python: <<parameters.python>>
      - install-r-packages:
          packages: "reticulate"
      - test
  osx-test:
    parameters:
      r:
        type: string
      python:
        type: string
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - install-r:
          r: <<parameters.r>>
      - install-conda:
          python: <<parameters.python>>
      - install-r-packages:
          packages: "reticulate"
      - test
  linux-wheels:
    working_directory: /tmp/workspace
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build the Linux wheels.
          command: |
            sudo python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
      - store_artifacts:
          path: wheelhouse/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - wheelhouse
  osx-wheels:
    working_directory: /tmp/workspace
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - run:
          name: Build the OS X wheels.
          command: |
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
      - store_artifacts:
          path: wheelhouse/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - wheelhouse
  upload-tarball:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run: sudo python -m pip install twine
      - run: |
          python setup.py sdist
          twine upload dist/*
  upload-wheels:
    docker:
      - image: circleci/python
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: sudo python -m pip install twine
      - run: twine upload /tmp/workspace/wheelhouse/*.whl

workflows:
  version: 2
  build:
    jobs:
      - linux-test:
          name: linux-rlatest-py27
          r: latest
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py34
          r: latest
          python: "3.4"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py35
          r: latest
          python: "3.5"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py36
          r: latest
          python: "3.6"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py37
          r: latest
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rdevel-py27
          r: devel
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rdevel-py37
          r: devel
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-r35-py27
          r: "3.5"
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-r35-py37
          r: "3.5"
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - osx-test:
          name: osx-rlatest-py27
          r: "latest"
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - osx-test:
          name: osx-rlatest-py37
          r: "latest"
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - osx-test:
          name: osx-rdevel-py27
          r: "devel"
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - osx-test:
          name: osx-rdevel-py37
          r: "devel"
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - linux-wheels:
          filters:
            tags:
              only: /^v.*/
      - osx-wheels:
          filters:
            tags:
              only: /^v.*/
      - upload-tarball:
          requires:
            - linux-rlatest-py27
            - linux-rlatest-py34
            - linux-rlatest-py35
            - linux-rlatest-py36
            - linux-rlatest-py37
            - linux-rdevel-py27
            - linux-rdevel-py37
            - linux-r35-py27
            - linux-r35-py37
            - osx-rlatest-py27
            - osx-rlatest-py37
            - osx-rdevel-py27
            - osx-rdevel-py37
            - linux-wheels
            - osx-wheels
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - upload-wheels:
          requires:
            - upload-tarball
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
