version: 2

jobs:
  test-r-3.4.4-py2:
    docker:
      - image: rocker/tidyverse:3.4.4
    steps:
      - run: |
          apt-get update
          apt-get install git ssh curl libpython-dev python-pip libffi6 libffi-dev -y
      - run: R --slave -e "install.packages('reticulate', repo = 'https://cloud.r-project.org')"
      - checkout
      - run: pip install -e .[test]
      - run: |
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
          pytest -s --cov=rchitect
      - run: |
          pip install codecov
          codecov
  test-r-release-py2:
    docker:
      - image: rocker/tidyverse
    steps:
      - run: |
          apt-get update
          apt-get install git ssh curl libpython-dev python-pip libffi6 libffi-dev -y
      - run: R --slave -e "install.packages('reticulate', repo = 'https://cloud.r-project.org')"
      - checkout
      - run: pip install -e .[test]
      - run: |
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
          pytest -s --cov=rchitect
      - run: |
          pip install codecov
          codecov
  test-r-devel-py2:
    docker:
      - image: rocker/tidyverse:devel
    steps:
      - run: |
          apt-get update
          apt-get install git ssh curl libpython-dev python-pip libffi6 libffi-dev -y
      - run: R --slave -e "install.packages('reticulate', repo = 'https://cloud.r-project.org')"
      - checkout
      - run: pip install -e .[test]
      - run: |
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
          pytest -s --cov=rchitect
      - run: |
          pip install codecov
          codecov
  test-r-3.4.4-py3:
    docker:
      - image: rocker/tidyverse:3.4.4
    steps:
      - run: |
          apt-get update
          apt-get install git ssh curl libpython3-dev python3-pip libffi6 libffi-dev -y
      - run: R --slave -e "install.packages('reticulate', repo = 'https://cloud.r-project.org')"
      - checkout
      - run: pip3 install -e .[test]
      - run: |
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
          pytest -s --cov=rchitect
      - run: |
          pip3 install codecov
          codecov
  test-r-release-py3:
    docker:
      - image: rocker/tidyverse
    steps:
      - run: |
          apt-get update
          apt-get install git ssh curl libpython3-dev python3-pip libffi6 libffi-dev -y
      - run: R --slave -e "install.packages('reticulate', repo = 'https://cloud.r-project.org')"
      - checkout
      - run: pip3 install -e .[test]
      - run: |
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
          pytest -s --cov=rchitect
      - run: |
          pip3 install codecov
          codecov
  test-r-devel-py3:
    docker:
      - image: rocker/tidyverse:devel
    steps:
      - run: |
          apt-get update
          apt-get install git ssh curl libpython3-dev python3-pip libffi6 libffi-dev -y
      - run: R --slave -e "install.packages('reticulate', repo = 'https://cloud.r-project.org')"
      - checkout
      - run: pip3 install -e .[test]
      - run: |
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
          pytest -s --cov=rchitect
      - run: |
          pip3 install codecov
          codecov
  linux-wheels:
    working_directory: /tmp/workspace
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build the Linux wheels.
          command: |
            sudo python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
      - store_artifacts:
          path: wheelhouse/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - wheelhouse
  osx-wheels:
    working_directory: /tmp/workspace
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - run:
          name: Build the OS X wheels.
          command: |
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
      - store_artifacts:
          path: wheelhouse/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - wheelhouse
  upload-tarball:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run: sudo python -m pip install twine
      - run: |
          python setup.py sdist
          twine upload dist/*
  upload-wheels:
    docker:
      - image: circleci/python
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: sudo python -m pip install twine
      - run: twine upload /tmp/workspace/wheelhouse/*.whl

workflows:
  version: 2
  build:
    jobs:
      - test-r-3.4.4-py2:
          filters:
            tags:
              only: /^v.*/
      - test-r-release-py2:
          filters:
            tags:
              only: /^v.*/
      - test-r-devel-py2:
          filters:
            tags:
              only: /^v.*/
      - test-r-3.4.4-py3:
          filters:
            tags:
              only: /^v.*/
      - test-r-release-py3:
          filters:
            tags:
              only: /^v.*/
      - test-r-devel-py3:
          filters:
            tags:
              only: /^v.*/
      - linux-wheels:
          filters:
            tags:
              only: /^v.*/
      - osx-wheels:
          filters:
            tags:
              only: /^v.*/
      - upload-tarball:
          requires:
            - test-r-3.4.4-py2
            - test-r-release-py2
            - test-r-devel-py2
            - test-r-3.4.4-py3
            - test-r-release-py3
            - test-r-devel-py3
            - linux-wheels
            - osx-wheels
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - upload-wheels:
          requires:
            - test-r-3.4.4-py2
            - test-r-release-py2
            - test-r-devel-py2
            - test-r-3.4.4-py3
            - test-r-release-py3
            - test-r-devel-py3
            - linux-wheels
            - osx-wheels
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
