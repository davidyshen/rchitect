version: 2.1

commands:
  setup-conda:
    parameters:
      python:
        type: string
        default: "3.6"
    steps:
      - run:
          name: Setup Miniconda
          command: |
            if [ $(uname) == "Darwin" ]; then
              curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o /tmp/miniconda.sh
            else
              curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh
            fi
            bash /tmp/miniconda.sh -b -f -p $HOME/miniconda
            export PATH="$HOME/miniconda/bin/:$PATH"
            $HOME/miniconda/bin/conda create -y --name myenv python=<<parameters.python>>
            echo "export PATH=$HOME/miniconda/bin:$PATH" >> $BASH_ENV
  setup-conda-windows:
    parameters:
      python:
        type: string
        default: "3.6"
    steps:
      - run:
          name: Setup Miniconda
          command: |
            conda create -y --name myenv python=<<parameters.python>>
            conda init powershell
  install-r:
    parameters:
      r:
        type: string
        default: "latest"
    steps:
      - run:
          name: Install R
          command: |
            if [ "<<parameters.r>>" == "latest" ]; then
              URL="https://cran.r-project.org/bin/macosx/base/R-release.pkg"
            elif [ "<<parameters.r>>" == "devel" ]; then
              URL="https://mac.r-project.org/high-sierra/R-devel/R-devel.pkg"
            else
              R_FILE=$(curl -sL https://cran.r-project.org/bin/macosx/base/ | grep -o 'R-<<parameters.r>>[0-9\.]*.pkg' | tail -n1)
              URL="https://cran.r-project.org/bin/macosx/base/$R_FILE"
            fi
            echo downloading "$URL"
            curl -L "$URL" -o R.pkg
            sudo installer -pkg R.pkg -target /
            sudo ln -sf /Library/Frameworks/R.framework/Resources/bin/R /usr/local/bin/R
            sudo ln -sf /Library/Frameworks/R.framework/Resources/bin/Rscript /usr/local/bin/Rscript
            if [ "<<parameters.r>>" == "devel" ]; then
              brew install libpng  # for building reticulate
            fi
  install-r-windows:
    parameters:
      r:
        type: string
        default: "latest"
    steps:
      - run:
          name: Install R
          command: |
            If ('<<parameters.r>>' -eq 'latest') {
              (new-object net.webclient).DownloadString("http://cran.rstudio.com/bin/windows/base/") -match 'href="(R-[0-9.]*[a-zA-Z]*-win.exe)"';
              (new-object net.webclient).DownloadFile($("http://cran.rstudio.com/bin/windows/base/"+$matches[1]),"C:\R-binary.exe")
            } ElseIf ('<<parameters.r>>' -eq 'devel') {
              (new-object net.webclient).DownloadFile("https://cran.r-project.org/bin/windows/base/R-devel-win.exe","C:\R-binary.exe")
            } Else {
              (new-object net.webclient).DownloadString("http://cran.rstudio.com/bin/windows/base/old/") -match 'R (<<parameters.r>>[\\.0-9]*)</a>'
              (new-object net.webclient).DownloadFile($("https://cran.r-project.org/bin/windows/base/old/"+$matches[1]+"/R-"+$matches[1]+"-win.exe"),"C:\R-binary.exe")
            }
            Start-Process -FilePath "C:\R-binary.exe" -Wait -ArgumentList "/VERYSILENT /DIR=C:\R"
            [System.Environment]::SetEnvironmentVariable("PATH", "C:\R\bin\x64;$env:PATH", "User")

executors:
  rocker:
    parameters:
      tag:
        type: string
        default: latest
    docker:
      - image: rocker/tidyverse:<< parameters.tag >>

orbs:
  win: circleci/windows@2.2.0

jobs:
  linux-test:
    parameters:
      r:
        type: string
      python:
        type: string
    executor:
      name: rocker
      tag: <<parameters.r>>
    steps:
      - run:
          name: Install apt-get dependencies
          command: |
            apt-get update
            apt-get install git ssh curl bzip2 libffi-dev -y
      - checkout
      - setup-conda:
          python: <<parameters.python>>
      - run: Rscript --quiet -e "install.packages('reticulate', repo = 'https://cloud.r-project.org')"
      - run:
          name: Install and test
          command: |
            source activate myenv
            python -m pip install -e .[test]
            export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
            pytest -s --cov=rchitect
            python -m pip install codecov
            codecov
  macos-test:
    parameters:
      r:
        type: string
      python:
        type: string
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - install-r:
          r: <<parameters.r>>
      - setup-conda:
          python: <<parameters.python>>
      - run: Rscript --quiet -e "install.packages('reticulate', repo = 'https://cloud.r-project.org')"
      - run:
          name: Install and test
          command: |
            source activate myenv
            python -m pip install -e .[test]
            export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:`R RHOME`/lib"
            pytest -s --cov=rchitect
            python -m pip install codecov
            codecov
  windows-test:
    parameters:
      r:
        type: string
      python:
        type: string
    executor: win/default
    steps:
      - checkout
      - install-r-windows:
          r: <<parameters.r>>
      - setup-conda-windows:
          python: <<parameters.python>>
      - run: Rscript --quiet -e "install.packages('reticulate', repo = 'https://cloud.r-project.org', type = 'win.binary')"
      - run:
          name: Install and test
          command: |
            conda activate myenv
            python -m pip install -e .[test]
            pytest -s --cov=rchitect
            python -m pip install codecov
            codecov
  linux-wheels:
    working_directory: /tmp/workspace
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build the Linux wheels.
          command: |
            sudo python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
      - store_artifacts:
          path: wheelhouse/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - wheelhouse
  macos-wheels:
    working_directory: /tmp/workspace
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - run:
          name: Build the macOS wheels.
          command: |
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
      - store_artifacts:
          path: wheelhouse/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - wheelhouse
  windows-wheels:
    working_directory: /tmp/workspace
    executor: win/default
    steps:
      - checkout
      - run:
          name: Build the Windows wheels.
          command: |
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
      - store_artifacts:
          path: wheelhouse/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - wheelhouse
  upload-tarball:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run: sudo python -m pip install twine
      - run: |
          python setup.py sdist
          twine upload dist/*
  upload-wheels:
    docker:
      - image: circleci/python
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: sudo python -m pip install twine
      - run: twine upload /tmp/workspace/wheelhouse/*.whl

workflows:
  version: 2
  build:
    jobs:
      - linux-test:
          name: linux-r35-py27
          r: "3.5"
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-r35-py37
          r: "3.5"
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py27
          r: latest
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py35
          r: latest
          python: "3.5"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py36
          r: latest
          python: "3.6"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py37
          r: latest
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rlatest-py38
          r: latest
          python: "3.8"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rdevel-py27
          r: devel
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - linux-test:
          name: linux-rdevel-py37
          r: devel
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - macos-test:
          name: macos-rlatest-py27
          r: "latest"
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - macos-test:
          name: macos-rlatest-py37
          r: "latest"
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - macos-test:
          name: macos-rdevel-py27
          r: "devel"
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - macos-test:
          name: macos-rdevel-py37
          r: "devel"
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - windows-test:
          name: windows-rlatest-py27
          r: "latest"
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - windows-test:
          name: windows-rlatest-py37
          r: "latest"
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      - windows-test:
          name: windows-rdevel-py27
          r: "devel"
          python: "2.7"
          filters:
            tags:
              only: /^v.*/
      - windows-test:
          name: windows-rdevel-py37
          r: "devel"
          python: "3.7"
          filters:
            tags:
              only: /^v.*/
      # - linux-wheels:
      #     filters:
      #       tags:
      #         only: /^v.*/
      # - macos-wheels:
      #     filters:
      #       tags:
      #         only: /^v.*/
      # - windows-wheels:
      #     filters:
      #       tags:
      #         only: /^v.*/
      # - upload-tarball:
      #     requires:
      #       - linux-r35-py27
      #       - linux-r35-py37
      #       - linux-rlatest-py27
      #       - linux-rlatest-py35
      #       - linux-rlatest-py36
      #       - linux-rlatest-py37
      #       - linux-rlatest-py38
      #       - linux-rdevel-py27
      #       - linux-rdevel-py37
      #       - macos-rlatest-py27
      #       - macos-rlatest-py37
      #       - macos-rdevel-py27
      #       - macos-rdevel-py37
      #       - windows-rlatest-py27
      #       - windows-rlatest-py37
      #       - windows-rdevel-py27
      #       - windows-rdevel-py37
      #       - linux-wheels
      #       - macos-wheels
      #       # - windows-wheels
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /^v.*/
      # - upload-wheels:
      #     requires:
      #       - upload-tarball
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /^v.*/
